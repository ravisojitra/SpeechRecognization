/*
 * @author Ravi Sojitra
 */

import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
public final class NewApplication extends javax.swing.JFrame
{
    String gotString;
    NewApplication tmpobj;
    int findFile=0;
    String toBePassedString="";
    String findTemp="";
    public NewApplication() throws IOException 
    {
        initComponents();
        /*initializeImage();*/
        ImagePanel panel = new ImagePanel(new ImageIcon("src/images/chloe2.jpg").getImage());
        jPanel2.add(panel);
        tmpobj=this;  
    }
        
    class ImagePanel extends JPanel 
    {
        private Image img;

        public ImagePanel(String img) 
        {
            this(new ImageIcon(img).getImage());
        }

        public ImagePanel(Image img)
        {
            this.img = img;
            Dimension size = new Dimension(235,201);
            setPreferredSize(size);
            setMinimumSize(size);
            setMaximumSize(size);
            setSize(size);
            setLayout(null);
        }

        @Override
        public void paintComponent(Graphics g) 
        {
            g.drawImage(img, 2, 8, null);
        }

    }
    /*public void initializeImage()
    {
        ImageIcon icon = new ImageIcon("src/images/head.png"); 
        JLabel label = new JLabel(icon); 
        jPanel2.add(label);
    }*/

    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 235, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 201, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);
        jTextArea1.getAccessibleContext().setAccessibleName("logArea");
        jTextArea1.getAccessibleContext().setAccessibleDescription("Logs for Program");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
        );

        jButton1.setText("Mic Off");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Status");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
    }                                           
   
    public void executeTask(String s) throws IOException, URISyntaxException
    {
        jTextArea1.append("\nYou said: " +s);
        if(findFile==1)
        {
            String driveLetter=jTextField1.getText();
            openFile(toBePassedString,new File(driveLetter));
            findFile=0;
        }
        else if (-1 != s.indexOf("quit"))
        {
            voce.SpeechInterface.destroy();
            System.exit(0);
        }
        else if(-1 != s.indexOf("computer"))
        {
            synthesizeIt("Opening :"+s);
            Desktop desktop = Desktop.getDesktop();
            File dirToOpen = new File("C:\\Windows\\WinSxS\\amd64_microsoft-windows-explorer-shortcuts_31bf3856ad364e35_6.3.9600.16384_none_a8764a00e4e31525\\computer.lnk");
            desktop.open(dirToOpen);
        }
        else if(-1 != s.indexOf("google"))
        {
            synthesizeIt("Opening :"+s);
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI oURL = new URI("http://www.google.com");
            desktop.browse(oURL);
        }
        else if(-1 != s.indexOf("facebook"))
        {
            synthesizeIt("Opening :"+s);
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI oURL;
            oURL = new URI("http://www.facebook.com");
            desktop.browse(oURL);
        }
        else if(-1 != s.indexOf("date"))
        {
            showDate();
        }
        else if(-1 != s.indexOf("time"))
        {
            showTime();
        }
        else if(-1 != s.indexOf("coin"))
        {
            coinFlipper();
        } 
        else if(-1 != s.indexOf("find file"))
        {
            findTemp=jTextField1.getText();
            toBePassedString=findTemp.substring(10);
            synthesizeIt("In which drive you want to find?");
            jTextField1.setText("");
            findFile=1;
            
        }
    }
    public void openFile(String tempPassed,File file) throws IOException
    {
        File[] list = file.listFiles();
        if(list!=null)
        for (File fil : list)
        {
            if (fil.isDirectory()) 
            {
                openFile(tempPassed,fil);
            } 
            else if (tempPassed.equalsIgnoreCase(fil.getName()))
            {
                Desktop.getDesktop().open(new File(fil.getParentFile().toString()));
            }
        }
    }
    public void showDate()
    {
        String months[] = {"January", "February", "March", "April","May", "June", "July", "August","September", "October", "November", "December"};
        GregorianCalendar gcalendar = new GregorianCalendar();
        int date=gcalendar.get(Calendar.DATE);
        int month=gcalendar.get(Calendar.MONTH);
        int year = gcalendar.get(Calendar.YEAR);
        jTextArea1.append("\nToday's Date is: "+ date + " "+months[month]+" "+year);
        synthesizeIt("Today's date is: "+gcalendar.get(Calendar.DATE) + " "+months[gcalendar.get(Calendar.MONTH)]+" "+year);
    }
    
    public void showTime()
    {
        DateFormat dateFormat = new SimpleDateFormat("hh:mm a");
        Date date = new Date();
        String time=dateFormat.format(date);
        jTextArea1.append("\n"+time);
        synthesizeIt(time);
    }

    public void coinFlipper() throws IOException
    {
        Random randomGenerator = new Random();
        int randomInt = randomGenerator.nextInt(10);
        if(randomInt<=5)
        {
            String coinString="tail";
            jTextArea1.append("It's Tail");
            synthesizeIt("It's Tail");
            coinImage ci=new coinImage(coinString);
        }
        else
        {
            String coinString="heads";
            jTextArea1.append("It's Head");
            synthesizeIt("It's Head");
            coinImage ci=new coinImage(coinString);
        }
        
    }
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String s=jButton1.getText();
        if(s.equals("Mic On"))
        {
            jButton1.setText("Mic Off");
            voce.SpeechInterface.destroy();
        }
        else
        {
            jButton1.setText("Mic On");
            new Thread(){ 
                @Override
                public void run(){
                    jTextArea1.append("initializing");
                    voce.SpeechInterface.init("K:/voce/lib", false, true, 
			"file:K:\\voce\\samples\\playpen\\data\\grammar", "objects");
                jTextArea1.append("\nThis is a speech recognition test. " 
			+ "Speak digits from 0-9 into the microphone. " 
			+ "Speak 'quit' to quit.");
		System.out.println("This is a speech recognition test. " 
			+ "Speak digits from 0-9 into the microphone. " 
			+ "Speak 'quit' to quit.");

		boolean quit = false;
		while (!quit)
		{
			try
			{
				Thread.sleep(200);
			}
			catch (InterruptedException e)
			{
			}

			while (voce.SpeechInterface.getRecognizerQueueSize() > 0)
			{
				String s = voce.SpeechInterface.popRecognizedString();
                                gotString=s;
                            try {
                                tmpobj.executeTask(s);
                            } catch (IOException | URISyntaxException ex) {
                                Logger.getLogger(NewApplication.class.getName()).log(Level.SEVERE, null, ex);
                            }
                                //jTextArea1.append("\nYou said: " +s);
				// Check if the string contains 'quit'.
				if (-1 != s.indexOf("quit"))
				{
					quit = true;
				}
                                
				System.out.println("You said: " + s);
				//voce.SpeechInterface.synthesize(s);
			}
		}

		voce.SpeechInterface.destroy();
		System.exit(0);
                            };
            }.start();
        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        try 
        {
            tmpobj.executeTask(jTextField1.getText());
        }
        catch (IOException | URISyntaxException ex)
        {
            Logger.getLogger(NewApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new NewApplication().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(NewApplication.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void synthesizeIt(String $s_2$tB_2$td_2$tY, String string) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public class coinImage
    {
        coinImage(String s) throws IOException
        {
            String heads = "src/images/head.png";
            String tails = "src/images/tail.png";
            JFrame jf=new JFrame();
            //jf.setLayout(new flowLayout());
            JLabel l;
            if(s.equals("heads"))
            {
                BufferedImage img = ImageIO.read(new File(heads));
                ImageIcon icon = new ImageIcon(img);
                l = new JLabel(icon);
                //JOptionPane.showMessageDialog(null, label);
            }
            else
            {
                BufferedImage img = ImageIO.read(new File(tails));
                ImageIcon icon = new ImageIcon(img);
                l = new JLabel(icon);
                //JOptionPane.showMessageDialog(null, label);
            }
            jf.add(l);
            jf.setSize(210,220);
            jf.show();
        }
    }

    public void synthesizeIt(String temp)
    {
        voce.SpeechInterface.init("K:/voce/lib", true, false, "", "");
        voce.SpeechInterface.synthesize(temp);
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   

}
